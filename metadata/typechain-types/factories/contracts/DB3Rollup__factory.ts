/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { DB3Rollup, DB3RollupInterface } from "../../contracts/DB3Rollup";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract Db3Token",
        name: "tokenContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getLockedBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105fd3803806105fd833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b6104d4806101296000396000f3fe6080604052600436106100295760003560e01c8063b6b55f251461002e578063c40868931461005e575b600080fd5b6100486004803603810190610043919061025b565b61009b565b60405161005591906102a3565b60405180910390f35b34801561006a57600080fd5b506100856004803603810190610080919061031c565b6101d7565b6040516100929190610358565b60405180910390f35b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016100fb93929190610382565b6020604051808303816000875af115801561011a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013e91906103e5565b5081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461018e9190610441565b925050819055507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c33836040516101c6929190610475565b60405180910390a160019050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b6000819050919050565b61023881610225565b811461024357600080fd5b50565b6000813590506102558161022f565b92915050565b60006020828403121561027157610270610220565b5b600061027f84828501610246565b91505092915050565b60008115159050919050565b61029d81610288565b82525050565b60006020820190506102b86000830184610294565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102e9826102be565b9050919050565b6102f9816102de565b811461030457600080fd5b50565b600081359050610316816102f0565b92915050565b60006020828403121561033257610331610220565b5b600061034084828501610307565b91505092915050565b61035281610225565b82525050565b600060208201905061036d6000830184610349565b92915050565b61037c816102de565b82525050565b60006060820190506103976000830186610373565b6103a46020830185610373565b6103b16040830184610349565b949350505050565b6103c281610288565b81146103cd57600080fd5b50565b6000815190506103df816103b9565b92915050565b6000602082840312156103fb576103fa610220565b5b6000610409848285016103d0565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061044c82610225565b915061045783610225565b925082820190508082111561046f5761046e610412565b5b92915050565b600060408201905061048a6000830185610373565b6104976020830184610349565b939250505056fea2646970667358221220f81b2a125878d4449dcfe9a1d18d2e11d9a0db5df55a969a01bb9440857a9add64736f6c63430008110033";

type DB3RollupConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DB3RollupConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DB3Rollup__factory extends ContractFactory {
  constructor(...args: DB3RollupConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    tokenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DB3Rollup> {
    return super.deploy(tokenContract, overrides || {}) as Promise<DB3Rollup>;
  }
  override getDeployTransaction(
    tokenContract: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(tokenContract, overrides || {});
  }
  override attach(address: string): DB3Rollup {
    return super.attach(address) as DB3Rollup;
  }
  override connect(signer: Signer): DB3Rollup__factory {
    return super.connect(signer) as DB3Rollup__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DB3RollupInterface {
    return new utils.Interface(_abi) as DB3RollupInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DB3Rollup {
    return new Contract(address, _abi, signerOrProvider) as DB3Rollup;
  }
}
