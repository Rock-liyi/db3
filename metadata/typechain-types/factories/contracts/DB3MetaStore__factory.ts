/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DB3MetaStore,
  DB3MetaStoreInterface,
} from "../../contracts/DB3MetaStore";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "page",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "pageSize",
        type: "uint64",
      },
    ],
    name: "getAllNetworkRegistrations",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "rollupNodeUrl",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "indexNodeUrls",
            type: "string[]",
          },
          {
            internalType: "uint64",
            name: "networkId",
            type: "uint64",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "latestArweaveTx",
            type: "bytes",
          },
        ],
        internalType: "struct IDB3MetaStore.NetworkRegistration[]",
        name: "registrations",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "networkId",
        type: "uint64",
      },
    ],
    name: "getNetworkRegistration",
    outputs: [
      {
        internalType: "string",
        name: "rollupNodeUrl",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "indexNodeUrls",
        type: "string[]",
      },
      {
        internalType: "uint64",
        name: "registrationNetworkId",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "latestArweaveTx",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "networkId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "indexNodeUrl",
        type: "string",
      },
    ],
    name: "registerIndexNode",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "networkId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "rollupNodeUrl",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "indexNodeUrls",
        type: "string[]",
      },
      {
        internalType: "bytes",
        name: "latestArweaveTx",
        type: "bytes",
      },
    ],
    name: "registerNetwork",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "networkId",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "rollupNodeUrl",
        type: "string",
      },
    ],
    name: "registerRollupNode",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "networkId",
        type: "uint64",
      },
      {
        internalType: "bytes",
        name: "latestArweaveTx",
        type: "bytes",
      },
    ],
    name: "updateRollupSteps",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611f67806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633e7fde1c146100675780634da99030146100835780634f3d2ede146100b357806374d3edb5146100e75780639395285014610117578063d8136ad314610147575b600080fd5b610081600480360381019061007c91906110b1565b610177565b005b61009d6004803603810190610098919061116c565b610371565b6040516100aa91906111e3565b60405180910390f35b6100cd60048036038101906100c891906111fe565b610431565b6040516100de95949392919061145b565b60405180910390f35b61010160048036038101906100fc91906114c3565b6106ff565b60405161010e91906111e3565b60405180910390f35b610131600480360381019061012c919061116c565b61079a565b60405161013e91906111e3565b60405180910390f35b610161600480360381019061015c919061151f565b610835565b60405161016e9190611793565b60405180910390f35b60008351116101bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101b290611801565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff160361022a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102219061186d565b60405180910390fd5b60008060008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090506000816000018054610265906118bc565b9050146102a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029e90611939565b60405180910390fd5b838160000190816102b89190611b0f565b50828160010190805190602001906102d1929190610c67565b50848160020160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550338160020160086101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818160030190816103519190611c3c565b506001600081548092919061036590611d3d565b91905055505050505050565b6000806000808567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060008160000180546103ad906118bc565b9050116103ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e690611dd1565b60405180910390fd5b80600101839080600181540180825580915050600190039060005260206000200160009091909190915090816104259190611b0f565b50600191505092915050565b606080600080606060008060008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002090506000816000018054610474906118bc565b9050116104b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ad90611dd1565b60405180910390fd5b80600001816001018260020160009054906101000a900467ffffffffffffffff168360020160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460030184805461050c906118bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610538906118bc565b80156105855780601f1061055a57610100808354040283529160200191610585565b820191906000526020600020905b81548152906001019060200180831161056857829003601f168201915b5050505050945083805480602002602001604051908101604052809291908181526020016000905b828210156106595783829060005260206000200180546105cc906118bc565b80601f01602080910402602001604051908101604052809291908181526020018280546105f8906118bc565b80156106455780601f1061061a57610100808354040283529160200191610645565b820191906000526020600020905b81548152906001019060200180831161062857829003601f168201915b5050505050815260200190600101906105ad565b50505050935080805461066b906118bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610697906118bc565b80156106e45780601f106106b9576101008083540402835291602001916106e4565b820191906000526020600020905b8154815290600101906020018083116106c757829003601f168201915b50505050509050955095509550955095505091939590929450565b6000806000808567ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000209050600081600001805461073b906118bc565b90501161077d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077490611dd1565b60405180910390fd5b8281600301908161078e9190611c3c565b50600191505092915050565b6000806000808567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060008160000180546107d6906118bc565b905011610818576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080f90611dd1565b60405180910390fd5b828160000190816108299190611b0f565b50600191505092915050565b60606000826001856108479190611df1565b6108519190611e2d565b67ffffffffffffffff16905060008367ffffffffffffffff16826108759190611e6a565b90506001548111156108875760015490505b600082826108959190611e9e565b90508067ffffffffffffffff8111156108b1576108b0610dff565b5b6040519080825280602002602001820160405280156108ea57816020015b6108d7610cc0565b8152602001906001900390816108cf5790505b509350600080600190505b6001548167ffffffffffffffff1611610c5c5760008060008367ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600001805461093e906118bc565b90501115610c495784821015801561095557508382105b15610c3a576000808267ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461099b906118bc565b80601f01602080910402602001604051908101604052809291908181526020018280546109c7906118bc565b8015610a145780601f106109e957610100808354040283529160200191610a14565b820191906000526020600020905b8154815290600101906020018083116109f757829003601f168201915b5050505050815260200160018201805480602002602001604051908101604052809291908181526020016000905b82821015610aee578382906000526020600020018054610a61906118bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610a8d906118bc565b8015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505050505081526020019060010190610a42565b5050505081526020016002820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016002820160089054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610b8e906118bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610bba906118bc565b8015610c075780601f10610bdc57610100808354040283529160200191610c07565b820191906000526020600020905b815481529060010190602001808311610bea57829003601f168201915b505050505081525050868684610c1d9190611e9e565b81518110610c2e57610c2d611ed2565b5b60200260200101819052505b8180610c4590611d3d565b9250505b8080610c5490611f01565b9150506108f5565b505050505092915050565b828054828255906000526020600020908101928215610caf579160200282015b82811115610cae578251829081610c9e9190611b0f565b5091602001919060010190610c87565b5b509050610cbc9190610d0f565b5090565b6040518060a001604052806060815260200160608152602001600067ffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b5b80821115610d2f5760008181610d269190610d33565b50600101610d10565b5090565b508054610d3f906118bc565b6000825580601f10610d515750610d70565b601f016020900490600052602060002090810190610d6f9190610d73565b5b50565b5b80821115610d8c576000816000905550600101610d74565b5090565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b610dc181610da4565b8114610dcc57600080fd5b50565b600081359050610dde81610db8565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e3782610dee565b810181811067ffffffffffffffff82111715610e5657610e55610dff565b5b80604052505050565b6000610e69610d90565b9050610e758282610e2e565b919050565b600067ffffffffffffffff821115610e9557610e94610dff565b5b610e9e82610dee565b9050602081019050919050565b82818337600083830152505050565b6000610ecd610ec884610e7a565b610e5f565b905082815260208101848484011115610ee957610ee8610de9565b5b610ef4848285610eab565b509392505050565b600082601f830112610f1157610f10610de4565b5b8135610f21848260208601610eba565b91505092915050565b600067ffffffffffffffff821115610f4557610f44610dff565b5b602082029050602081019050919050565b600080fd5b6000610f6e610f6984610f2a565b610e5f565b90508083825260208201905060208402830185811115610f9157610f90610f56565b5b835b81811015610fd857803567ffffffffffffffff811115610fb657610fb5610de4565b5b808601610fc38982610efc565b85526020850194505050602081019050610f93565b5050509392505050565b600082601f830112610ff757610ff6610de4565b5b8135611007848260208601610f5b565b91505092915050565b600067ffffffffffffffff82111561102b5761102a610dff565b5b61103482610dee565b9050602081019050919050565b600061105461104f84611010565b610e5f565b9050828152602081018484840111156110705761106f610de9565b5b61107b848285610eab565b509392505050565b600082601f83011261109857611097610de4565b5b81356110a8848260208601611041565b91505092915050565b600080600080608085870312156110cb576110ca610d9a565b5b60006110d987828801610dcf565b945050602085013567ffffffffffffffff8111156110fa576110f9610d9f565b5b61110687828801610efc565b935050604085013567ffffffffffffffff81111561112757611126610d9f565b5b61113387828801610fe2565b925050606085013567ffffffffffffffff81111561115457611153610d9f565b5b61116087828801611083565b91505092959194509250565b6000806040838503121561118357611182610d9a565b5b600061119185828601610dcf565b925050602083013567ffffffffffffffff8111156111b2576111b1610d9f565b5b6111be85828601610efc565b9150509250929050565b60008115159050919050565b6111dd816111c8565b82525050565b60006020820190506111f860008301846111d4565b92915050565b60006020828403121561121457611213610d9a565b5b600061122284828501610dcf565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561126557808201518184015260208101905061124a565b60008484015250505050565b600061127c8261122b565b6112868185611236565b9350611296818560208601611247565b61129f81610dee565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006112f28261122b565b6112fc81856112d6565b935061130c818560208601611247565b61131581610dee565b840191505092915050565b600061132c83836112e7565b905092915050565b6000602082019050919050565b600061134c826112aa565b61135681856112b5565b935083602082028501611368856112c6565b8060005b858110156113a457848403895281516113858582611320565b945061139083611334565b925060208a0199505060018101905061136c565b50829750879550505050505092915050565b6113bf81610da4565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113f0826113c5565b9050919050565b611400816113e5565b82525050565b600081519050919050565b600082825260208201905092915050565b600061142d82611406565b6114378185611411565b9350611447818560208601611247565b61145081610dee565b840191505092915050565b600060a08201905081810360008301526114758188611271565b905081810360208301526114898187611341565b905061149860408301866113b6565b6114a560608301856113f7565b81810360808301526114b78184611422565b90509695505050505050565b600080604083850312156114da576114d9610d9a565b5b60006114e885828601610dcf565b925050602083013567ffffffffffffffff81111561150957611508610d9f565b5b61151585828601611083565b9150509250929050565b6000806040838503121561153657611535610d9a565b5b600061154485828601610dcf565b925050602061155585828601610dcf565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006115a7826112aa565b6115b1818561158b565b9350836020820285016115c3856112c6565b8060005b858110156115ff57848403895281516115e08582611320565b94506115eb83611334565b925060208a019950506001810190506115c7565b50829750879550505050505092915050565b61161a81610da4565b82525050565b611629816113e5565b82525050565b600082825260208201905092915050565b600061164b82611406565b611655818561162f565b9350611665818560208601611247565b61166e81610dee565b840191505092915050565b600060a083016000830151848203600086015261169682826112e7565b915050602083015184820360208601526116b0828261159c565b91505060408301516116c56040860182611611565b5060608301516116d86060860182611620565b50608083015184820360808601526116f08282611640565b9150508091505092915050565b60006117098383611679565b905092915050565b6000602082019050919050565b60006117298261155f565b611733818561156a565b9350836020820285016117458561157b565b8060005b85811015611781578484038952815161176285826116fd565b945061176d83611711565b925060208a01995050600181019050611749565b50829750879550505050505092915050565b600060208201905081810360008301526117ad818461171e565b905092915050565b7f496e76616c696420526f6c6c7570206e6f64652055524c000000000000000000600082015250565b60006117eb601783611236565b91506117f6826117b5565b602082019050919050565b6000602082019050818103600083015261181a816117de565b9050919050565b7f496e76616c69642073656e646572206164647265737300000000000000000000600082015250565b6000611857601683611236565b915061186282611821565b602082019050919050565b600060208201905081810360008301526118868161184a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118d457607f821691505b6020821081036118e7576118e661188d565b5b50919050565b7f4e6574776f726b20616c72656164792072656769737465726564000000000000600082015250565b6000611923601a83611236565b915061192e826118ed565b602082019050919050565b6000602082019050818103600083015261195281611916565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119bb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261197e565b6119c5868361197e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000611a0c611a07611a02846119dd565b6119e7565b6119dd565b9050919050565b6000819050919050565b611a26836119f1565b611a3a611a3282611a13565b84845461198b565b825550505050565b600090565b611a4f611a42565b611a5a818484611a1d565b505050565b5b81811015611a7e57611a73600082611a47565b600181019050611a60565b5050565b601f821115611ac357611a9481611959565b611a9d8461196e565b81016020851015611aac578190505b611ac0611ab88561196e565b830182611a5f565b50505b505050565b600082821c905092915050565b6000611ae660001984600802611ac8565b1980831691505092915050565b6000611aff8383611ad5565b9150826002028217905092915050565b611b188261122b565b67ffffffffffffffff811115611b3157611b30610dff565b5b611b3b82546118bc565b611b46828285611a82565b600060209050601f831160018114611b795760008415611b67578287015190505b611b718582611af3565b865550611bd9565b601f198416611b8786611959565b60005b82811015611baf57848901518255600182019150602085019450602081019050611b8a565b86831015611bcc5784890151611bc8601f891682611ad5565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f821115611c3757611c0881611be1565b611c118461196e565b81016020851015611c20578190505b611c34611c2c8561196e565b830182611a5f565b50505b505050565b611c4582611406565b67ffffffffffffffff811115611c5e57611c5d610dff565b5b611c6882546118bc565b611c73828285611bf6565b600060209050601f831160018114611ca65760008415611c94578287015190505b611c9e8582611af3565b865550611d06565b601f198416611cb486611be1565b60005b82811015611cdc57848901518255600182019150602085019450602081019050611cb7565b86831015611cf95784890151611cf5601f891682611ad5565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d48826119dd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d7a57611d79611d0e565b5b600182019050919050565b7f4e6574776f726b206e6f74207265676973746572656400000000000000000000600082015250565b6000611dbb601683611236565b9150611dc682611d85565b602082019050919050565b60006020820190508181036000830152611dea81611dae565b9050919050565b6000611dfc82610da4565b9150611e0783610da4565b9250828203905067ffffffffffffffff811115611e2757611e26611d0e565b5b92915050565b6000611e3882610da4565b9150611e4383610da4565b9250828202611e5181610da4565b9150808214611e6357611e62611d0e565b5b5092915050565b6000611e75826119dd565b9150611e80836119dd565b9250828201905080821115611e9857611e97611d0e565b5b92915050565b6000611ea9826119dd565b9150611eb4836119dd565b9250828203905081811115611ecc57611ecb611d0e565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611f0c82610da4565b915067ffffffffffffffff8203611f2657611f25611d0e565b5b60018201905091905056fea26469706673582212202a15ec419d835f7e64e804645a60fa76927618942a837fc1e80c34ce59df39ec64736f6c63430008110033";

type DB3MetaStoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DB3MetaStoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DB3MetaStore__factory extends ContractFactory {
  constructor(...args: DB3MetaStoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DB3MetaStore> {
    return super.deploy(overrides || {}) as Promise<DB3MetaStore>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DB3MetaStore {
    return super.attach(address) as DB3MetaStore;
  }
  override connect(signer: Signer): DB3MetaStore__factory {
    return super.connect(signer) as DB3MetaStore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DB3MetaStoreInterface {
    return new utils.Interface(_abi) as DB3MetaStoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DB3MetaStore {
    return new Contract(address, _abi, signerOrProvider) as DB3MetaStore;
  }
}
